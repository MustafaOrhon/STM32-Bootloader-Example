/*
 * bootloader_command_app.h
 *
 *  Created on: 8 Jun 2023
 *      Author: Mustafa
 */

#ifndef INC_BOOTLOADER_COMMAND_APP_H_
#define INC_BOOTLOADER_COMMAND_APP_H_
#include "main.h"
#include "string.h"
#define BL_VER         0x10  //1.0

#define CRC_FAIL       1
#define CRC_SUCCESS    0

#define BL_ACK_VALUE   0xA5
#define BL_NACK_VALUE  0x7F

#define ADD_VALID      0x00
#define ADD_INVALID    0x01

#define SRAM1_SIZE   112*1024
#define SRAM1_END    (SRAM1_BASE + SRAM1_SIZE)

#define SRAM2_SIZE   16*1024
#define SRAM2_END    (SRAM2_BASE + SRAM2_SIZE)

#define SRAM3_SIZE   64*1024
#define SRAM3_END    (SRAM3_BASE + SRAM3_SIZE)

#define BKPSRAM_SIZE   4*1024
#define BKPSRAM_END    (BKPSRAM_BASE + BKPSRAM_SIZE)

#define INVALID_SECTOR 0x04

void bootloader_get_ver_cmd(uint8_t *bl_rx_data);
void bootloader_get_help_cmd(uint8_t *bl_rx_data);
void bootloader_get_cid_cmd(uint8_t *bl_rx_data);
void bootloader_get_rdp_cmd(uint8_t *bl_rx_data);
void bootloader_go_to_addr_cmd(uint8_t *bl_rx_data);
void bootloader_flash_erase_cmd(uint8_t *bl_rx_data);
void bootloader_mem_write_cmd(uint8_t *bl_rx_data);
void bootloader_en_rw_protect_cmd(uint8_t *bl_rx_data);
uint8_t bootloader_verify_crc(uint8_t *buffer,uint32_t length,uint32_t crc_host);
void bootloader_send_ack(uint8_t follow_length);
void bootloader_send_nack();
void bootloader_uart_write_data(uint8_t *Buffer,uint32_t length);
uint8_t bootloader_get_version(void);
uint16_t get_mcu_chip_id(void);
uint8_t get_flash_rdp_level(void);
uint8_t bootloader_verify_addr(uint32_t goaddr);
uint8_t execute_flash_erase(uint8_t start_sector,uint8_t number_of_sector);
uint8_t execute_mem_write(uint8_t *Buffer,uint32_t memAddress,uint32_t len);


#endif /* INC_BOOTLOADER_COMMAND_APP_H_ */
